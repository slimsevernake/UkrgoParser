@using UkrgoParser.Shared.Models.Entities

@inject HttpClient Http
@inject IJSRuntime JsRuntime

<MatDialogTitle class="dialog-title">
    <div class="title">@Post.Title</div>
    <div @onclick="@(_ => CloseDialog())" class="close">
        <MatIcon Icon="@MatIconNames.Close"></MatIcon>
    </div>
</MatDialogTitle>
<MatDialogContent>
    <p>
        @((MarkupString)Post.Attributes)
    </p>
    <p>
        @Post.Description
    </p>
    @{
        if (Post.ImageUris == null) return;
        foreach (var imageUri in Post.ImageUris)
        {
            <p>
                <img src="@($"api/browser/GetImage?imageUri={imageUri}")" />
            </p>
        }
    }
</MatDialogContent>
<MatDialogActions>
    <MatButton OnClick="@(_ => CloseDialog())">Ок</MatButton>
</MatDialogActions>

@code {

    [Parameter]
    public Post Post { get; set; }

    [CascadingParameter]
    public MatDialogReference DialogReference { get; set; }

    private async Task CloseDialog()
    {
        DialogReference.Close(null);
        await JsRuntime.InvokeAsync<object>("makeWindowScrollbarVisibleIfNeeded");
    }
}