@page "/"

<p>
    <MatTextField Type="url" Value="@Url" OnInput="@(e => Url = e.Value.ToString())"
                  Label="Url" Placeholder="Пример: https://www.olx.ua/nedvizhimost/kvartiry-komnaty/arenda-kvartir-komnat/kharkov" FullWidth="true"></MatTextField>
</p>
<p>
    <MatButton Disabled="string.IsNullOrEmpty(Url)" OnClick="@Process" Raised="true">Обновить</MatButton>
    <MatButton OnClick="@SaveData">Сохранить</MatButton>
</p>
<p>
    <MatProgressBar Progress="@Progress"></MatProgressBar>
</p>

<MediaQuery Media="@Breakpoints.SmallDown" MatchesChanged="@(matched => IsSmall = matched)"></MediaQuery>

@if (PostLinks == null || IsSmall == null) { return; }

@if (IsSmall.Value)
{
    foreach (var postLink in PostLinks)
    {
        <MatCard class="up-mat-card">
            <MatCardContent @onclick="@(async e => await ShowPostDetails(postLink.PostLink.Uri, e))">
                <MatCardMedia Wide="true" ImageUrl="@($"api/browser/GetImage?imageUri={postLink.PostLink.ImageUri}&cropUnwantedBackground=true")"></MatCardMedia>
                <div class="up-mat-card-content">
                    <MatHeadline6 class="up-mat-card-clean-margin">
                        <a href="https://contact-info.azurewebsites.net/home/@postLink.Contact.PhoneNumber.Replace("+", "")" target="_blank" onclick="event.stopPropagation();">
                            <span class="@(PostLinks.Count(p => p.Contact.PhoneNumber == postLink.Contact.PhoneNumber) > 1 ? "text-danger": "")">@postLink.Contact.PhoneNumber</span>
                        </a>
                    </MatHeadline6>
                    @if (!string.IsNullOrEmpty(postLink.PostLink.Price))
                    {
                        <MatSubtitle2>
                            <strong>@postLink.PostLink.Price</strong>
                        </MatSubtitle2>
                    }
                    <MatSubtitle2 class="up-mat-card-clean-margin">
                        @postLink.Contact.Name
                    </MatSubtitle2>
                </div>
                <MatBody2 class="up-mat-card-content up-mat-card-clean-margin">
                    <a href="@postLink.PostLink.Uri.ToString()" target="_blank" onclick="event.stopPropagation();">@postLink.PostLink.Caption</a>
                </MatBody2>
                <MatBody2 class="up-mat-card-content up-mat-card-clean-margin">
                    <MatCaption>
                        @postLink.PostLink.Location - @postLink.PostLink.Date
                    </MatCaption>
                </MatBody2>
            </MatCardContent>
            <MatCardActions>
                <MatCardActionButtons>
                    <MatButton OnClick="@(async e => await ShowPostDetails(postLink.PostLink.Uri, e))">Открыть</MatButton>
                </MatCardActionButtons>

                <MatCardActionIcons>
                    <MatIconButton Icon="@MatIconNames.File_copy" OnClick="@(async e => await CopyPhoneNumber(postLink.Contact.PhoneNumber, e))"></MatIconButton>
                    <MatIconButton Icon="@MatIconNames.Block" OnClick="@(async e => await BlockPhoneNumber(postLink.Contact.PhoneNumber, e))"></MatIconButton>
                    <MatIconButton Icon="@MatIconNames.Chat" Link="@GetViberUrl(postLink.Contact.PhoneNumber)"></MatIconButton>
                    <MatIconButton Icon="@MatIconNames.Contact_phone" OnClick="@(async e => await EditContact(postLink.Contact.PhoneNumber, e))"></MatIconButton>
                </MatCardActionIcons>
            </MatCardActions>
        </MatCard>
    }
}
else
{
    <MatTable Items="@PostLinks" PageSize="@PostLinks.Count" ShowPaging="false">
        <MatTableHeader>
            <th>Действия</th>
            <th>Изображение</th>
            <th>Телефон</th>
            <th>Ссылка</th>
        </MatTableHeader>
        <MatTableRow>
            <td class="row-controls">
                <div>
                    <MatIconButton Icon="@MatIconNames.File_copy" OnClick="@(async e => await CopyPhoneNumber(context.Contact.PhoneNumber, e))"></MatIconButton>
                    <MatIconButton Icon="@MatIconNames.Block" OnClick="@(async e => await BlockPhoneNumber(context.Contact.PhoneNumber, e))"></MatIconButton>
                </div>
                <div>
                    <MatIconButton Icon="@MatIconNames.Open_in_new" OnClick="@(async e => await ShowPostDetails(context.PostLink.Uri, e))"></MatIconButton>
                    <MatIconButton Icon="@MatIconNames.Chat" Link="@GetViberUrl(context.Contact.PhoneNumber)"></MatIconButton>
                </div>
            </td>
            <td class="image-cell">
                <img src="@($"api/browser/GetImage?imageUri={context.PostLink.ImageUri}&cropUnwantedBackground=true")" />
            </td>
            <td>
                <div class="contact-panel">
                    <div class="contact">
                        <a href="https://contact-info.azurewebsites.net/home/@context.Contact.PhoneNumber.Replace("+", "")" class="contact-number" target="_blank">
                            <span class="@(PostLinks.Count(p => p.Contact.PhoneNumber == context.Contact.PhoneNumber) > 1 ? "text-danger": "")">@context.Contact.PhoneNumber</span>
                        </a>
                        <span class="contact-name">@context.Contact.Name</span>
                    </div>
                    <MatIconButton Icon="@MatIconNames.Contact_phone" OnClick="@(async e => await EditContact(context.Contact.PhoneNumber, e))"></MatIconButton>
                </div>
            </td>
            <td>
                <p>
                    <a href="@context.PostLink.Uri.ToString()" target="_blank">@context.PostLink.Caption</a>
                </p>
                @if (!string.IsNullOrEmpty(context.PostLink.Price))
                {
                    <p>
                        <strong>@context.PostLink.Price</strong>
                    </p>
                }
                <p>
                    <MatCaption>
                        @context.PostLink.Location - @context.PostLink.Date
                    </MatCaption>
                </p>
            </td>
        </MatTableRow>
    </MatTable>
}